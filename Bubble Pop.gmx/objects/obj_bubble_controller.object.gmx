<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(room_width/2,room_height/2,obj_bubble);
ini_open('Data.ini');
global.last_hour_of_year = ini_read('Data.ini','hour_of_year', 'hour_of_year', date_get_hour_of_year(date_current_datetime()));
ini_close();
time_boop = date_get_hour_of_year(date_current_datetime());
time_boop -= global.last_hour_of_year;
if time_boop &lt; 0 time_boop = 1;

repeat(time_boop) {
    instance_create(random(room_width),random(room_height),obj_bubble);
    instance_create(random(room_width),random(room_height),obj_bubble);
    instance_create(random(room_width),random(room_height),obj_bubble);
    instance_create(random(room_width),random(room_height),obj_bubble);
    instance_create(random(room_width),random(room_height),obj_bubble);
};
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//background_colour = make_colour_hsv(colour_get_hue(background_colour)+ random(0.5)- random(0.5),colour_get_saturation(background_colour)+ random(0.2)- random(0.2),colour_get_value(background_colour)+ random(0.2)- random(0.2));
//  ^ adds bug to html version. might as well just nuke it.

if (global.level &gt; 24) {
    if (scr_chance(score)) {
        instance_create(random(room_width),random(room_height),obj_bubble);
        audio_play_sound(snd_bubble_pop,1,false);
        audio_sound_pitch(snd_bubble_pop,1 + random(0.4) - random(0.4));
    }
}

if (global.level &gt; 49) {
    if (scr_chance(level*100)) {
        instance_create(random(room_width),random(room_height),obj_bubble);
        audio_play_sound(snd_bubble_pop,1,false);
        audio_sound_pitch(snd_bubble_pop,1 + random(0.8) - random(0.8));
    }
}

if (scr_chance(700)) {
var ww = random(room_width);
var hh = random(room_height);
    instance_create(ww,hh,obj_bubble);
    instance_create(ww,hh,obj_bubble);
audio_play_sound(snd_bubble_pop,1,false);
audio_sound_pitch(snd_bubble_pop,1 + random(0.4) - random(0.4));
}

if (scr_chance(180)) {
    instance_create(random(room_width),random(room_height),obj_bubble);
audio_play_sound(snd_bubble_pop,1,false);
audio_sound_pitch(snd_bubble_pop,1 + random(0.4) - random(0.4));
}

if (scr_chance(100)) {
   var inst =  instance_create(random(room_width),random(room_height),obj_bubble);
   
       with (inst) {
     physics_apply_impulse(phy_com_x,phy_com_y,random(7),random(7));
     physics_apply_impulse(phy_com_x,phy_com_y,-random(7),random(7));
     physics_apply_impulse(phy_com_x,phy_com_y,random(7),-random(7));
     physics_apply_impulse(phy_com_x,phy_com_y,-random(7),-random(7));
     }

   
audio_play_sound(snd_bubble_pop,1,false);
audio_sound_pitch(snd_bubble_pop,1 + random(0.4) - random(0.4));
}

if (scr_chance(260)) {
    repeat (2) {
    var inst = instance_create(random(room_width),random(room_height),obj_bubble);
    with (inst) {
     physics_apply_impulse(phy_com_x,phy_com_y,random(70),random(70));
     physics_apply_impulse(phy_com_x,phy_com_y,-random(70),random(70));
     physics_apply_impulse(phy_com_x,phy_com_y,random(70),-random(70));
     physics_apply_impulse(phy_com_x,phy_com_y,-random(70),-random(70));
     }
     };
audio_play_sound(snd_bubble_pop,1,false);
audio_sound_pitch(snd_bubble_pop,1 + random(0.4) - random(0.4));
}


if (scr_chance(1600)) {
    repeat (3) {
    var inst = instance_create(random(room_width),random(room_height),obj_bubble);
    with (inst) {
     physics_apply_impulse(phy_com_x,phy_com_y,random(100),random(100));
     physics_apply_impulse(phy_com_x,phy_com_y,-random(100),random(100));
     physics_apply_impulse(phy_com_x,phy_com_y,random(100),-random(100));
     physics_apply_impulse(phy_com_x,phy_com_y,-random(100),-random(100));
     sprite_index = spr_shiny_bubble;
     }
     };
audio_play_sound(snd_bubble_pop,1,false);
audio_sound_pitch(snd_bubble_pop,1 + random(0.4) - random(0.4));
}



if (scr_chance(1100)) {
var ww = random(room_width);
var hh = random(room_height);
    instance_create(ww,hh,obj_bubble);
    instance_create(ww,hh,obj_bubble);
    instance_create(ww,hh,obj_bubble);
audio_play_sound(snd_bubble_pop,1,false);
audio_sound_pitch(snd_bubble_pop,1 + random(0.4) - random(0.4));
}

if (scr_chance(1000)) {
var ww = random(room_width);
var hh = random(room_height);

    instance_create(ww,hh,obj_bubble);
    instance_create(ww,hh,obj_bubble);
    instance_create(ww,hh,obj_bubble);
    instance_create(ww,hh,obj_bubble);
audio_play_sound(snd_bubble_pop,1,false);
audio_sound_pitch(snd_bubble_pop,1 + random(0.4) - random(0.4));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
draw_set_alpha(1);
draw_set_font(font0);
draw_set_colour(c_black);
draw_text(10,10,string(score));
draw_text(12,12,string(score));
draw_set_colour(c_white);
draw_text(11,11,string(score));

draw_set_colour(c_black);
var ls = "Level " + string(global.level);
draw_text(30,30,ls);
draw_text(32,32,ls);
draw_set_colour(c_white);
draw_text(31,31,ls);

draw_set_alpha(0.5);
draw_text(0,0,string(time_boop));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

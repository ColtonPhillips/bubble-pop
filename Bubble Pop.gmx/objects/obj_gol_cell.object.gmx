<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_cell</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>randomize();
image_alpha = 0;
if (scr_chance(200)) image_alpha = 1 - random(0.5);
will_die = false;
will_live = false;
was_just_changed = false;
is_first_run = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if will_die == true image_alpha = 0;
if will_live == true image_alpha = 1 - random(0.5);

will_die = false;
will_live = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!mouse_check_button(mb_left)) was_just_changed = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*Any live cell with fewer than two live neighbours dies, as if caused by under-population.

Any live cell with two or three live neighbours lives on to the next generation.

Any live cell with more than three live neighbours dies, as if by overcrowding.

Any dead cell with exactly three live neighbours becomes a live cell, as if by reproduction.
*/

if (is_first_run == true) {
is_first_run = false;
insta = instance_position(x+25, y, obj_gol_cell);
instb = instance_position(x-25, y, obj_gol_cell);
instc = instance_position(x+25, y+25, obj_gol_cell);
instd = instance_position(x+25, y-25, obj_gol_cell);
inste = instance_position(x-25, y+25, obj_gol_cell);
instf = instance_position(x-25, y-25, obj_gol_cell);
instg = instance_position(x, y+25, obj_gol_cell);
insth = instance_position(x, y-25, obj_gol_cell);
}

if obj_game_of_life_controller.step_now == false return 0;

n = 0;

 if insta != noone
    {    
    with (insta) if image_alpha != 0 other.n+=1;
    }

 if instb != noone
    {    
    with (instb) if image_alpha != 0 other.n+=1;
    }

 if instc != noone
    {    
    with (instc) if image_alpha != 0 other.n+=1;
    }

 if instd != noone
    {    
    with (instd) if image_alpha != 0 other.n+=1;
    }
        
 if inste != noone
    {    
    with (inste) if image_alpha != 0 other.n+=1;
    }


 if instf != noone
    {    
    with (instf) if image_alpha != 0 other.n+=1;
    }
    
 if instg != noone
    {    
    with (instg) if image_alpha != 0 other.n+=1;
    }

 if insth != noone
    {    
    with (insth) if image_alpha != 0 other.n+=1;
    }
    

if (image_alpha == 0) { // dead
    if n == 3 will_live = true;
}
else { // alive
    if n &lt; 2 will_die = true;
    if n &gt; 3 will_die = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if was_just_changed == true return 0;

if image_alpha == 0 image_alpha = 1 - random(0.5);
else image_alpha = 0;

was_just_changed = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>12,12</point>
  </PhysicsShapePoints>
</object>
